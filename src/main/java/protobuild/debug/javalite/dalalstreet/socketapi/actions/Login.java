// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: actions/Login.proto

package dalalstreet.socketapi.actions;

public final class Login {
  private Login() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface LoginRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dalalstreet.socketapi.actions.LoginRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string email = 1;</code>
     */
    java.lang.String getEmail();
    /**
     * <code>optional string email = 1;</code>
     */
    com.google.protobuf.ByteString
        getEmailBytes();

    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * Protobuf type {@code dalalstreet.socketapi.actions.LoginRequest}
   */
  public  static final class LoginRequest extends
      com.google.protobuf.GeneratedMessageLite<
          LoginRequest, LoginRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:dalalstreet.socketapi.actions.LoginRequest)
      LoginRequestOrBuilder {
    private LoginRequest() {
      email_ = "";
      password_ = "";
    }
    public static final int EMAIL_FIELD_NUMBER = 1;
    private java.lang.String email_;
    /**
     * <code>optional string email = 1;</code>
     */
    public java.lang.String getEmail() {
      return email_;
    }
    /**
     * <code>optional string email = 1;</code>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(email_);
    }
    /**
     * <code>optional string email = 1;</code>
     */
    private void setEmail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      email_ = value;
    }
    /**
     * <code>optional string email = 1;</code>
     */
    private void clearEmail() {
      
      email_ = getDefaultInstance().getEmail();
    }
    /**
     * <code>optional string email = 1;</code>
     */
    private void setEmailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      email_ = value.toStringUtf8();
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.String password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      return password_;
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(password_);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    private void setPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      password_ = value;
    }
    /**
     * <code>optional string password = 2;</code>
     */
    private void clearPassword() {
      
      password_ = getDefaultInstance().getPassword();
    }
    /**
     * <code>optional string password = 2;</code>
     */
    private void setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      password_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!email_.isEmpty()) {
        output.writeString(1, getEmail());
      }
      if (!password_.isEmpty()) {
        output.writeString(2, getPassword());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!email_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getEmail());
      }
      if (!password_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPassword());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static dalalstreet.socketapi.actions.Login.LoginRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static dalalstreet.socketapi.actions.Login.LoginRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.Login.LoginRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static dalalstreet.socketapi.actions.Login.LoginRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.Login.LoginRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.Login.LoginRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.Login.LoginRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.Login.LoginRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.Login.LoginRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.Login.LoginRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dalalstreet.socketapi.actions.Login.LoginRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code dalalstreet.socketapi.actions.LoginRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dalalstreet.socketapi.actions.Login.LoginRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:dalalstreet.socketapi.actions.LoginRequest)
        dalalstreet.socketapi.actions.Login.LoginRequestOrBuilder {
      // Construct using dalalstreet.socketapi.actions.Login.LoginRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string email = 1;</code>
       */
      public java.lang.String getEmail() {
        return instance.getEmail();
      }
      /**
       * <code>optional string email = 1;</code>
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        return instance.getEmailBytes();
      }
      /**
       * <code>optional string email = 1;</code>
       */
      public Builder setEmail(
          java.lang.String value) {
        copyOnWrite();
        instance.setEmail(value);
        return this;
      }
      /**
       * <code>optional string email = 1;</code>
       */
      public Builder clearEmail() {
        copyOnWrite();
        instance.clearEmail();
        return this;
      }
      /**
       * <code>optional string email = 1;</code>
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEmailBytes(value);
        return this;
      }

      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        return instance.getPassword();
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        return instance.getPasswordBytes();
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        copyOnWrite();
        instance.setPassword(value);
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        copyOnWrite();
        instance.clearPassword();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPasswordBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dalalstreet.socketapi.actions.LoginRequest)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new dalalstreet.socketapi.actions.Login.LoginRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          dalalstreet.socketapi.actions.Login.LoginRequest other = (dalalstreet.socketapi.actions.Login.LoginRequest) arg1;
          email_ = visitor.visitString(!email_.isEmpty(), email_,
              !other.email_.isEmpty(), other.email_);
          password_ = visitor.visitString(!password_.isEmpty(), password_,
              !other.password_.isEmpty(), other.password_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  email_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  password_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (dalalstreet.socketapi.actions.Login.LoginRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:dalalstreet.socketapi.actions.LoginRequest)
    private static final dalalstreet.socketapi.actions.Login.LoginRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LoginRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static dalalstreet.socketapi.actions.Login.LoginRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LoginRequest> PARSER;

    public static com.google.protobuf.Parser<LoginRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LoginResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dalalstreet.socketapi.actions.LoginResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
     */
    dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse getResult();

    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
     */
    dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError getInvalidCredentialsError();

    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    dalalstreet.socketapi.errors.Errors.BadRequestError getBadRequestError();

    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    dalalstreet.socketapi.errors.Errors.InternalServerError getInternalServerError();

    public dalalstreet.socketapi.actions.Login.LoginResponse.ResponseCase getResponseCase();
  }
  /**
   * Protobuf type {@code dalalstreet.socketapi.actions.LoginResponse}
   */
  public  static final class LoginResponse extends
      com.google.protobuf.GeneratedMessageLite<
          LoginResponse, LoginResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:dalalstreet.socketapi.actions.LoginResponse)
      LoginResponseOrBuilder {
    private LoginResponse() {
    }
    public interface LoginSuccessResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional string session_id = 1;</code>
       */
      java.lang.String getSessionId();
      /**
       * <code>optional string session_id = 1;</code>
       */
      com.google.protobuf.ByteString
          getSessionIdBytes();

      /**
       * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
       */
      boolean hasUser();
      /**
       * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
       */
      dalalstreet.socketapi.models.UserOuterClass.User getUser();

      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */
      int getStocksOwnedCount();
      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */
      boolean containsStocksOwned(
          int key);
      /**
       * Use {@link #getStocksOwnedMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.Integer, java.lang.Integer>
      getStocksOwned();
      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */
      java.util.Map<java.lang.Integer, java.lang.Integer>
      getStocksOwnedMap();
      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */

      int getStocksOwnedOrDefault(
          int key,
          int defaultValue);
      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */

      int getStocksOwnedOrThrow(
          int key);

      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */
      int getStockListCount();
      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */
      boolean containsStockList(
          int key);
      /**
       * Use {@link #getStockListMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock>
      getStockList();
      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */
      java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock>
      getStockListMap();
      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */

      dalalstreet.socketapi.models.StockOuterClass.Stock getStockListOrDefault(
          int key,
          dalalstreet.socketapi.models.StockOuterClass.Stock defaultValue);
      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */

      dalalstreet.socketapi.models.StockOuterClass.Stock getStockListOrThrow(
          int key);

      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */
      int getConstantsCount();
      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */
      boolean containsConstants(
          java.lang.String key);
      /**
       * Use {@link #getConstantsMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.Integer>
      getConstants();
      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */
      java.util.Map<java.lang.String, java.lang.Integer>
      getConstantsMap();
      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */

      int getConstantsOrDefault(
          java.lang.String key,
          int defaultValue);
      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */

      int getConstantsOrThrow(
          java.lang.String key);
    }
    /**
     * Protobuf type {@code dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse}
     */
    public  static final class LoginSuccessResponse extends
        com.google.protobuf.GeneratedMessageLite<
            LoginSuccessResponse, LoginSuccessResponse.Builder> implements
        // @@protoc_insertion_point(message_implements:dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse)
        LoginSuccessResponseOrBuilder {
      private LoginSuccessResponse() {
        sessionId_ = "";
      }
      private int bitField0_;
      public static final int SESSION_ID_FIELD_NUMBER = 1;
      private java.lang.String sessionId_;
      /**
       * <code>optional string session_id = 1;</code>
       */
      public java.lang.String getSessionId() {
        return sessionId_;
      }
      /**
       * <code>optional string session_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSessionIdBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(sessionId_);
      }
      /**
       * <code>optional string session_id = 1;</code>
       */
      private void setSessionId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sessionId_ = value;
      }
      /**
       * <code>optional string session_id = 1;</code>
       */
      private void clearSessionId() {
        
        sessionId_ = getDefaultInstance().getSessionId();
      }
      /**
       * <code>optional string session_id = 1;</code>
       */
      private void setSessionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sessionId_ = value.toStringUtf8();
      }

      public static final int USER_FIELD_NUMBER = 2;
      private dalalstreet.socketapi.models.UserOuterClass.User user_;
      /**
       * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
       */
      public boolean hasUser() {
        return user_ != null;
      }
      /**
       * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
       */
      public dalalstreet.socketapi.models.UserOuterClass.User getUser() {
        return user_ == null ? dalalstreet.socketapi.models.UserOuterClass.User.getDefaultInstance() : user_;
      }
      /**
       * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
       */
      private void setUser(dalalstreet.socketapi.models.UserOuterClass.User value) {
        if (value == null) {
          throw new NullPointerException();
        }
        user_ = value;
        
        }
      /**
       * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
       */
      private void setUser(
          dalalstreet.socketapi.models.UserOuterClass.User.Builder builderForValue) {
        user_ = builderForValue.build();
        
      }
      /**
       * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
       */
      private void mergeUser(dalalstreet.socketapi.models.UserOuterClass.User value) {
        if (user_ != null &&
            user_ != dalalstreet.socketapi.models.UserOuterClass.User.getDefaultInstance()) {
          user_ =
            dalalstreet.socketapi.models.UserOuterClass.User.newBuilder(user_).mergeFrom(value).buildPartial();
        } else {
          user_ = value;
        }
        
      }
      /**
       * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
       */
      private void clearUser() {  user_ = null;
        
      }

      public static final int STOCKS_OWNED_FIELD_NUMBER = 3;
      private static final class StocksOwnedDefaultEntryHolder {
        static final com.google.protobuf.MapEntryLite<
            java.lang.Integer, java.lang.Integer> defaultEntry =
                com.google.protobuf.MapEntryLite
                .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                    com.google.protobuf.WireFormat.FieldType.UINT32,
                    0,
                    com.google.protobuf.WireFormat.FieldType.INT32,
                    0);
      }
      private com.google.protobuf.MapFieldLite<
          java.lang.Integer, java.lang.Integer> stocksOwned_ =
              com.google.protobuf.MapFieldLite.emptyMapField();
      private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Integer>
      internalGetStocksOwned() {
        return stocksOwned_;
      }
      private com.google.protobuf.MapFieldLite<java.lang.Integer, java.lang.Integer>
      internalGetMutableStocksOwned() {
        if (!stocksOwned_.isMutable()) {
          stocksOwned_ = stocksOwned_.mutableCopy();
        }
        return stocksOwned_;
      }

      public int getStocksOwnedCount() {
        return internalGetStocksOwned().size();
      }
      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */

      public boolean containsStocksOwned(
          int key) {
        
        return internalGetStocksOwned().containsKey(key);
      }
      /**
       * Use {@link #getStocksOwnedMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getStocksOwned() {
        return getStocksOwnedMap();
      }
      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getStocksOwnedMap() {
        return java.util.Collections.unmodifiableMap(
            internalGetStocksOwned());
      }
      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */

      public int getStocksOwnedOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetStocksOwned();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */

      public int getStocksOwnedOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetStocksOwned();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
       */
      private java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableStocksOwnedMap() {
        return internalGetMutableStocksOwned();
      }

      public static final int STOCK_LIST_FIELD_NUMBER = 4;
      private static final class StockListDefaultEntryHolder {
        static final com.google.protobuf.MapEntryLite<
            java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> defaultEntry =
                com.google.protobuf.MapEntryLite
                .<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock>newDefaultInstance(
                    com.google.protobuf.WireFormat.FieldType.UINT32,
                    0,
                    com.google.protobuf.WireFormat.FieldType.MESSAGE,
                    dalalstreet.socketapi.models.StockOuterClass.Stock.getDefaultInstance());
      }
      private com.google.protobuf.MapFieldLite<
          java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> stockList_ =
              com.google.protobuf.MapFieldLite.emptyMapField();
      private com.google.protobuf.MapFieldLite<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock>
      internalGetStockList() {
        return stockList_;
      }
      private com.google.protobuf.MapFieldLite<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock>
      internalGetMutableStockList() {
        if (!stockList_.isMutable()) {
          stockList_ = stockList_.mutableCopy();
        }
        return stockList_;
      }

      public int getStockListCount() {
        return internalGetStockList().size();
      }
      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */

      public boolean containsStockList(
          int key) {
        
        return internalGetStockList().containsKey(key);
      }
      /**
       * Use {@link #getStockListMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> getStockList() {
        return getStockListMap();
      }
      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */

      public java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> getStockListMap() {
        return java.util.Collections.unmodifiableMap(
            internalGetStockList());
      }
      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */

      public dalalstreet.socketapi.models.StockOuterClass.Stock getStockListOrDefault(
          int key,
          dalalstreet.socketapi.models.StockOuterClass.Stock defaultValue) {
        
        java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> map =
            internalGetStockList();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */

      public dalalstreet.socketapi.models.StockOuterClass.Stock getStockListOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> map =
            internalGetStockList();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
       */
      private java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock>
      getMutableStockListMap() {
        return internalGetMutableStockList();
      }

      public static final int CONSTANTS_FIELD_NUMBER = 5;
      private static final class ConstantsDefaultEntryHolder {
        static final com.google.protobuf.MapEntryLite<
            java.lang.String, java.lang.Integer> defaultEntry =
                com.google.protobuf.MapEntryLite
                .<java.lang.String, java.lang.Integer>newDefaultInstance(
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.INT32,
                    0);
      }
      private com.google.protobuf.MapFieldLite<
          java.lang.String, java.lang.Integer> constants_ =
              com.google.protobuf.MapFieldLite.emptyMapField();
      private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
      internalGetConstants() {
        return constants_;
      }
      private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
      internalGetMutableConstants() {
        if (!constants_.isMutable()) {
          constants_ = constants_.mutableCopy();
        }
        return constants_;
      }

      public int getConstantsCount() {
        return internalGetConstants().size();
      }
      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */

      public boolean containsConstants(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetConstants().containsKey(key);
      }
      /**
       * Use {@link #getConstantsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getConstants() {
        return getConstantsMap();
      }
      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getConstantsMap() {
        return java.util.Collections.unmodifiableMap(
            internalGetConstants());
      }
      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */

      public int getConstantsOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConstants();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */

      public int getConstantsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConstants();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, int32&gt; constants = 5;</code>
       */
      private java.util.Map<java.lang.String, java.lang.Integer>
      getMutableConstantsMap() {
        return internalGetMutableConstants();
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!sessionId_.isEmpty()) {
          output.writeString(1, getSessionId());
        }
        if (user_ != null) {
          output.writeMessage(2, getUser());
        }
        for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
             : internalGetStocksOwned().entrySet()) {
          StocksOwnedDefaultEntryHolder.defaultEntry.serializeTo(
              output, 3, entry.getKey(), entry.getValue());
        }
        for (java.util.Map.Entry<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> entry
             : internalGetStockList().entrySet()) {
          StockListDefaultEntryHolder.defaultEntry.serializeTo(
              output, 4, entry.getKey(), entry.getValue());
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
             : internalGetConstants().entrySet()) {
          ConstantsDefaultEntryHolder.defaultEntry.serializeTo(
              output, 5, entry.getKey(), entry.getValue());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (!sessionId_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getSessionId());
        }
        if (user_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getUser());
        }
        for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
             : internalGetStocksOwned().entrySet()) {
          size += StocksOwnedDefaultEntryHolder.defaultEntry.computeMessageSize(
            3, entry.getKey(), entry.getValue());
        }
        for (java.util.Map.Entry<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> entry
             : internalGetStockList().entrySet()) {
          size += StockListDefaultEntryHolder.defaultEntry.computeMessageSize(
            4, entry.getKey(), entry.getValue());
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
             : internalGetConstants().entrySet()) {
          size += ConstantsDefaultEntryHolder.defaultEntry.computeMessageSize(
            5, entry.getKey(), entry.getValue());
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse, Builder> implements
          // @@protoc_insertion_point(builder_implements:dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse)
          dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponseOrBuilder {
        // Construct using dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional string session_id = 1;</code>
         */
        public java.lang.String getSessionId() {
          return instance.getSessionId();
        }
        /**
         * <code>optional string session_id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSessionIdBytes() {
          return instance.getSessionIdBytes();
        }
        /**
         * <code>optional string session_id = 1;</code>
         */
        public Builder setSessionId(
            java.lang.String value) {
          copyOnWrite();
          instance.setSessionId(value);
          return this;
        }
        /**
         * <code>optional string session_id = 1;</code>
         */
        public Builder clearSessionId() {
          copyOnWrite();
          instance.clearSessionId();
          return this;
        }
        /**
         * <code>optional string session_id = 1;</code>
         */
        public Builder setSessionIdBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setSessionIdBytes(value);
          return this;
        }

        /**
         * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
         */
        public boolean hasUser() {
          return instance.hasUser();
        }
        /**
         * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
         */
        public dalalstreet.socketapi.models.UserOuterClass.User getUser() {
          return instance.getUser();
        }
        /**
         * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
         */
        public Builder setUser(dalalstreet.socketapi.models.UserOuterClass.User value) {
          copyOnWrite();
          instance.setUser(value);
          return this;
          }
        /**
         * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
         */
        public Builder setUser(
            dalalstreet.socketapi.models.UserOuterClass.User.Builder builderForValue) {
          copyOnWrite();
          instance.setUser(builderForValue);
          return this;
        }
        /**
         * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
         */
        public Builder mergeUser(dalalstreet.socketapi.models.UserOuterClass.User value) {
          copyOnWrite();
          instance.mergeUser(value);
          return this;
        }
        /**
         * <code>optional .dalalstreet.socketapi.models.User user = 2;</code>
         */
        public Builder clearUser() {  copyOnWrite();
          instance.clearUser();
          return this;
        }


        public int getStocksOwnedCount() {
          return instance.getStocksOwnedMap().size();
        }
        /**
         * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
         */

        public boolean containsStocksOwned(
            int key) {
          
          return instance.getStocksOwnedMap().containsKey(key);
        }

        public Builder clearStocksOwned() {
          copyOnWrite();
          instance.getMutableStocksOwnedMap().clear();
          return this;
        }
        /**
         * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
         */

        public Builder removeStocksOwned(
            int key) {
          
          copyOnWrite();
          instance.getMutableStocksOwnedMap().remove(key);
          return this;
        }
        /**
         * Use {@link #getStocksOwnedMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.Integer, java.lang.Integer> getStocksOwned() {
          return getStocksOwnedMap();
        }
        /**
         * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
         */
        public java.util.Map<java.lang.Integer, java.lang.Integer> getStocksOwnedMap() {
          return java.util.Collections.unmodifiableMap(
              instance.getStocksOwnedMap());
        }
        /**
         * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
         */

        public int getStocksOwnedOrDefault(
            int key,
            int defaultValue) {
          
          java.util.Map<java.lang.Integer, java.lang.Integer> map =
              instance.getStocksOwnedMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
         */

        public int getStocksOwnedOrThrow(
            int key) {
          
          java.util.Map<java.lang.Integer, java.lang.Integer> map =
              instance.getStocksOwnedMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }
        /**
         * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
         */
        public Builder putStocksOwned(
            int key,
            int value) {
          
          
          copyOnWrite();
          instance.getMutableStocksOwnedMap().put(key, value);
          return this;
        }
        /**
         * <code>map&lt;uint32, int32&gt; stocks_owned = 3;</code>
         */
        public Builder putAllStocksOwned(
            java.util.Map<java.lang.Integer, java.lang.Integer> values) {
          copyOnWrite();
          instance.getMutableStocksOwnedMap().putAll(values);
          return this;
        }


        public int getStockListCount() {
          return instance.getStockListMap().size();
        }
        /**
         * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
         */

        public boolean containsStockList(
            int key) {
          
          return instance.getStockListMap().containsKey(key);
        }

        public Builder clearStockList() {
          copyOnWrite();
          instance.getMutableStockListMap().clear();
          return this;
        }
        /**
         * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
         */

        public Builder removeStockList(
            int key) {
          
          copyOnWrite();
          instance.getMutableStockListMap().remove(key);
          return this;
        }
        /**
         * Use {@link #getStockListMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> getStockList() {
          return getStockListMap();
        }
        /**
         * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
         */
        public java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> getStockListMap() {
          return java.util.Collections.unmodifiableMap(
              instance.getStockListMap());
        }
        /**
         * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
         */

        public dalalstreet.socketapi.models.StockOuterClass.Stock getStockListOrDefault(
            int key,
            dalalstreet.socketapi.models.StockOuterClass.Stock defaultValue) {
          
          java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> map =
              instance.getStockListMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
         */

        public dalalstreet.socketapi.models.StockOuterClass.Stock getStockListOrThrow(
            int key) {
          
          java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> map =
              instance.getStockListMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }
        /**
         * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
         */
        public Builder putStockList(
            int key,
            dalalstreet.socketapi.models.StockOuterClass.Stock value) {
          
          if (value == null) { throw new java.lang.NullPointerException(); }
          copyOnWrite();
          instance.getMutableStockListMap().put(key, value);
          return this;
        }
        /**
         * <code>map&lt;uint32, .dalalstreet.socketapi.models.Stock&gt; stock_list = 4;</code>
         */
        public Builder putAllStockList(
            java.util.Map<java.lang.Integer, dalalstreet.socketapi.models.StockOuterClass.Stock> values) {
          copyOnWrite();
          instance.getMutableStockListMap().putAll(values);
          return this;
        }


        public int getConstantsCount() {
          return instance.getConstantsMap().size();
        }
        /**
         * <code>map&lt;string, int32&gt; constants = 5;</code>
         */

        public boolean containsConstants(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return instance.getConstantsMap().containsKey(key);
        }

        public Builder clearConstants() {
          copyOnWrite();
          instance.getMutableConstantsMap().clear();
          return this;
        }
        /**
         * <code>map&lt;string, int32&gt; constants = 5;</code>
         */

        public Builder removeConstants(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          copyOnWrite();
          instance.getMutableConstantsMap().remove(key);
          return this;
        }
        /**
         * Use {@link #getConstantsMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Integer> getConstants() {
          return getConstantsMap();
        }
        /**
         * <code>map&lt;string, int32&gt; constants = 5;</code>
         */
        public java.util.Map<java.lang.String, java.lang.Integer> getConstantsMap() {
          return java.util.Collections.unmodifiableMap(
              instance.getConstantsMap());
        }
        /**
         * <code>map&lt;string, int32&gt; constants = 5;</code>
         */

        public int getConstantsOrDefault(
            java.lang.String key,
            int defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.Integer> map =
              instance.getConstantsMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;string, int32&gt; constants = 5;</code>
         */

        public int getConstantsOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.Integer> map =
              instance.getConstantsMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }
        /**
         * <code>map&lt;string, int32&gt; constants = 5;</code>
         */
        public Builder putConstants(
            java.lang.String key,
            int value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          
          copyOnWrite();
          instance.getMutableConstantsMap().put(key, value);
          return this;
        }
        /**
         * <code>map&lt;string, int32&gt; constants = 5;</code>
         */
        public Builder putAllConstants(
            java.util.Map<java.lang.String, java.lang.Integer> values) {
          copyOnWrite();
          instance.getMutableConstantsMap().putAll(values);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            stocksOwned_.makeImmutable();
            stockList_.makeImmutable();
            constants_.makeImmutable();
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse other = (dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse) arg1;
            sessionId_ = visitor.visitString(!sessionId_.isEmpty(), sessionId_,
                !other.sessionId_.isEmpty(), other.sessionId_);
            user_ = visitor.visitMessage(user_, other.user_);
            stocksOwned_ = visitor.visitMap(
                stocksOwned_, other.internalGetStocksOwned());
            stockList_ = visitor.visitMap(
                stockList_, other.internalGetStockList());
            constants_ = visitor.visitMap(
                constants_, other.internalGetConstants());
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readStringRequireUtf8();

                    sessionId_ = s;
                    break;
                  }
                  case 18: {
                    dalalstreet.socketapi.models.UserOuterClass.User.Builder subBuilder = null;
                    if (user_ != null) {
                      subBuilder = user_.toBuilder();
                    }
                    user_ = input.readMessage(dalalstreet.socketapi.models.UserOuterClass.User.parser(), extensionRegistry);
                    if (subBuilder != null) {
                      subBuilder.mergeFrom(user_);
                      user_ = subBuilder.buildPartial();
                    }

                    break;
                  }
                  case 26: {
                    if (!stocksOwned_.isMutable()) {
                      stocksOwned_ = stocksOwned_.mutableCopy();
                    }
                    StocksOwnedDefaultEntryHolder.defaultEntry.parseInto(stocksOwned_, input, extensionRegistry);  break;
                  }
                  case 34: {
                    if (!stockList_.isMutable()) {
                      stockList_ = stockList_.mutableCopy();
                    }
                    StockListDefaultEntryHolder.defaultEntry.parseInto(stockList_, input, extensionRegistry);  break;
                  }
                  case 42: {
                    if (!constants_.isMutable()) {
                      constants_ = constants_.mutableCopy();
                    }
                    ConstantsDefaultEntryHolder.defaultEntry.parseInto(constants_, input, extensionRegistry);  break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse)
      private static final dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new LoginSuccessResponse();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<LoginSuccessResponse> PARSER;

      public static com.google.protobuf.Parser<LoginSuccessResponse> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface InvalidCredentialsErrorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional string reason = 1;</code>
       */
      java.lang.String getReason();
      /**
       * <code>optional string reason = 1;</code>
       */
      com.google.protobuf.ByteString
          getReasonBytes();
    }
    /**
     * Protobuf type {@code dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError}
     */
    public  static final class InvalidCredentialsError extends
        com.google.protobuf.GeneratedMessageLite<
            InvalidCredentialsError, InvalidCredentialsError.Builder> implements
        // @@protoc_insertion_point(message_implements:dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError)
        InvalidCredentialsErrorOrBuilder {
      private InvalidCredentialsError() {
        reason_ = "";
      }
      public static final int REASON_FIELD_NUMBER = 1;
      private java.lang.String reason_;
      /**
       * <code>optional string reason = 1;</code>
       */
      public java.lang.String getReason() {
        return reason_;
      }
      /**
       * <code>optional string reason = 1;</code>
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(reason_);
      }
      /**
       * <code>optional string reason = 1;</code>
       */
      private void setReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reason_ = value;
      }
      /**
       * <code>optional string reason = 1;</code>
       */
      private void clearReason() {
        
        reason_ = getDefaultInstance().getReason();
      }
      /**
       * <code>optional string reason = 1;</code>
       */
      private void setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reason_ = value.toStringUtf8();
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!reason_.isEmpty()) {
          output.writeString(1, getReason());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (!reason_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getReason());
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError, Builder> implements
          // @@protoc_insertion_point(builder_implements:dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError)
          dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsErrorOrBuilder {
        // Construct using dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional string reason = 1;</code>
         */
        public java.lang.String getReason() {
          return instance.getReason();
        }
        /**
         * <code>optional string reason = 1;</code>
         */
        public com.google.protobuf.ByteString
            getReasonBytes() {
          return instance.getReasonBytes();
        }
        /**
         * <code>optional string reason = 1;</code>
         */
        public Builder setReason(
            java.lang.String value) {
          copyOnWrite();
          instance.setReason(value);
          return this;
        }
        /**
         * <code>optional string reason = 1;</code>
         */
        public Builder clearReason() {
          copyOnWrite();
          instance.clearReason();
          return this;
        }
        /**
         * <code>optional string reason = 1;</code>
         */
        public Builder setReasonBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setReasonBytes(value);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError other = (dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError) arg1;
            reason_ = visitor.visitString(!reason_.isEmpty(), reason_,
                !other.reason_.isEmpty(), other.reason_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readStringRequireUtf8();

                    reason_ = s;
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError)
      private static final dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new InvalidCredentialsError();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<InvalidCredentialsError> PARSER;

      public static com.google.protobuf.Parser<InvalidCredentialsError> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int responseCase_ = 0;
    private java.lang.Object response_;
    public enum ResponseCase
        implements com.google.protobuf.Internal.EnumLite {
      RESULT(1),
      INVALID_CREDENTIALS_ERROR(2),
      BAD_REQUEST_ERROR(3),
      INTERNAL_SERVER_ERROR(4),
      RESPONSE_NOT_SET(0);
      private final int value;
      private ResponseCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResponseCase valueOf(int value) {
        return forNumber(value);
      }

      public static ResponseCase forNumber(int value) {
        switch (value) {
          case 1: return RESULT;
          case 2: return INVALID_CREDENTIALS_ERROR;
          case 3: return BAD_REQUEST_ERROR;
          case 4: return INTERNAL_SERVER_ERROR;
          case 0: return RESPONSE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ResponseCase
    getResponseCase() {
      return ResponseCase.forNumber(
          responseCase_);
    }

    private void clearResponse() {
      responseCase_ = 0;
      response_ = null;
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
     */
    public dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse getResult() {
      if (responseCase_ == 1) {
         return (dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse) response_;
      }
      return dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse.getDefaultInstance();
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
     */
    private void setResult(dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      responseCase_ = 1;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
     */
    private void setResult(
        dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse.Builder builderForValue) {
      response_ = builderForValue.build();
      responseCase_ = 1;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
     */
    private void mergeResult(dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse value) {
      if (responseCase_ == 1 &&
          response_ != dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse.getDefaultInstance()) {
        response_ = dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse.newBuilder((dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse) response_)
            .mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      responseCase_ = 1;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
     */
    private void clearResult() {
      if (responseCase_ == 1) {
        responseCase_ = 0;
        response_ = null;
      }
    }

    public static final int INVALID_CREDENTIALS_ERROR_FIELD_NUMBER = 2;
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
     */
    public dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError getInvalidCredentialsError() {
      if (responseCase_ == 2) {
         return (dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError) response_;
      }
      return dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError.getDefaultInstance();
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
     */
    private void setInvalidCredentialsError(dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      responseCase_ = 2;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
     */
    private void setInvalidCredentialsError(
        dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError.Builder builderForValue) {
      response_ = builderForValue.build();
      responseCase_ = 2;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
     */
    private void mergeInvalidCredentialsError(dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError value) {
      if (responseCase_ == 2 &&
          response_ != dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError.getDefaultInstance()) {
        response_ = dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError.newBuilder((dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError) response_)
            .mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      responseCase_ = 2;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
     */
    private void clearInvalidCredentialsError() {
      if (responseCase_ == 2) {
        responseCase_ = 0;
        response_ = null;
      }
    }

    public static final int BAD_REQUEST_ERROR_FIELD_NUMBER = 3;
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    public dalalstreet.socketapi.errors.Errors.BadRequestError getBadRequestError() {
      if (responseCase_ == 3) {
         return (dalalstreet.socketapi.errors.Errors.BadRequestError) response_;
      }
      return dalalstreet.socketapi.errors.Errors.BadRequestError.getDefaultInstance();
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    private void setBadRequestError(dalalstreet.socketapi.errors.Errors.BadRequestError value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      responseCase_ = 3;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    private void setBadRequestError(
        dalalstreet.socketapi.errors.Errors.BadRequestError.Builder builderForValue) {
      response_ = builderForValue.build();
      responseCase_ = 3;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    private void mergeBadRequestError(dalalstreet.socketapi.errors.Errors.BadRequestError value) {
      if (responseCase_ == 3 &&
          response_ != dalalstreet.socketapi.errors.Errors.BadRequestError.getDefaultInstance()) {
        response_ = dalalstreet.socketapi.errors.Errors.BadRequestError.newBuilder((dalalstreet.socketapi.errors.Errors.BadRequestError) response_)
            .mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      responseCase_ = 3;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    private void clearBadRequestError() {
      if (responseCase_ == 3) {
        responseCase_ = 0;
        response_ = null;
      }
    }

    public static final int INTERNAL_SERVER_ERROR_FIELD_NUMBER = 4;
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    public dalalstreet.socketapi.errors.Errors.InternalServerError getInternalServerError() {
      if (responseCase_ == 4) {
         return (dalalstreet.socketapi.errors.Errors.InternalServerError) response_;
      }
      return dalalstreet.socketapi.errors.Errors.InternalServerError.getDefaultInstance();
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    private void setInternalServerError(dalalstreet.socketapi.errors.Errors.InternalServerError value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      responseCase_ = 4;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    private void setInternalServerError(
        dalalstreet.socketapi.errors.Errors.InternalServerError.Builder builderForValue) {
      response_ = builderForValue.build();
      responseCase_ = 4;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    private void mergeInternalServerError(dalalstreet.socketapi.errors.Errors.InternalServerError value) {
      if (responseCase_ == 4 &&
          response_ != dalalstreet.socketapi.errors.Errors.InternalServerError.getDefaultInstance()) {
        response_ = dalalstreet.socketapi.errors.Errors.InternalServerError.newBuilder((dalalstreet.socketapi.errors.Errors.InternalServerError) response_)
            .mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      responseCase_ = 4;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    private void clearInternalServerError() {
      if (responseCase_ == 4) {
        responseCase_ = 0;
        response_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responseCase_ == 1) {
        output.writeMessage(1, (dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse) response_);
      }
      if (responseCase_ == 2) {
        output.writeMessage(2, (dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError) response_);
      }
      if (responseCase_ == 3) {
        output.writeMessage(3, (dalalstreet.socketapi.errors.Errors.BadRequestError) response_);
      }
      if (responseCase_ == 4) {
        output.writeMessage(4, (dalalstreet.socketapi.errors.Errors.InternalServerError) response_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (responseCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse) response_);
      }
      if (responseCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError) response_);
      }
      if (responseCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (dalalstreet.socketapi.errors.Errors.BadRequestError) response_);
      }
      if (responseCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (dalalstreet.socketapi.errors.Errors.InternalServerError) response_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static dalalstreet.socketapi.actions.Login.LoginResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static dalalstreet.socketapi.actions.Login.LoginResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.Login.LoginResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static dalalstreet.socketapi.actions.Login.LoginResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.Login.LoginResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.Login.LoginResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.Login.LoginResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.Login.LoginResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.Login.LoginResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.Login.LoginResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dalalstreet.socketapi.actions.Login.LoginResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code dalalstreet.socketapi.actions.LoginResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dalalstreet.socketapi.actions.Login.LoginResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:dalalstreet.socketapi.actions.LoginResponse)
        dalalstreet.socketapi.actions.Login.LoginResponseOrBuilder {
      // Construct using dalalstreet.socketapi.actions.Login.LoginResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public ResponseCase
          getResponseCase() {
        return instance.getResponseCase();
      }

      public Builder clearResponse() {
        copyOnWrite();
        instance.clearResponse();
        return this;
      }


      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
       */
      public dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse getResult() {
        return instance.getResult();
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
       */
      public Builder setResult(dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse value) {
        copyOnWrite();
        instance.setResult(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
       */
      public Builder setResult(
          dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setResult(builderForValue);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
       */
      public Builder mergeResult(dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse value) {
        copyOnWrite();
        instance.mergeResult(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.LoginSuccessResponse result = 1;</code>
       */
      public Builder clearResult() {
        copyOnWrite();
        instance.clearResult();
        return this;
      }

      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
       */
      public dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError getInvalidCredentialsError() {
        return instance.getInvalidCredentialsError();
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
       */
      public Builder setInvalidCredentialsError(dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError value) {
        copyOnWrite();
        instance.setInvalidCredentialsError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
       */
      public Builder setInvalidCredentialsError(
          dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError.Builder builderForValue) {
        copyOnWrite();
        instance.setInvalidCredentialsError(builderForValue);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
       */
      public Builder mergeInvalidCredentialsError(dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError value) {
        copyOnWrite();
        instance.mergeInvalidCredentialsError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.LoginResponse.InvalidCredentialsError invalid_credentials_error = 2;</code>
       */
      public Builder clearInvalidCredentialsError() {
        copyOnWrite();
        instance.clearInvalidCredentialsError();
        return this;
      }

      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public dalalstreet.socketapi.errors.Errors.BadRequestError getBadRequestError() {
        return instance.getBadRequestError();
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public Builder setBadRequestError(dalalstreet.socketapi.errors.Errors.BadRequestError value) {
        copyOnWrite();
        instance.setBadRequestError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public Builder setBadRequestError(
          dalalstreet.socketapi.errors.Errors.BadRequestError.Builder builderForValue) {
        copyOnWrite();
        instance.setBadRequestError(builderForValue);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public Builder mergeBadRequestError(dalalstreet.socketapi.errors.Errors.BadRequestError value) {
        copyOnWrite();
        instance.mergeBadRequestError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public Builder clearBadRequestError() {
        copyOnWrite();
        instance.clearBadRequestError();
        return this;
      }

      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public dalalstreet.socketapi.errors.Errors.InternalServerError getInternalServerError() {
        return instance.getInternalServerError();
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public Builder setInternalServerError(dalalstreet.socketapi.errors.Errors.InternalServerError value) {
        copyOnWrite();
        instance.setInternalServerError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public Builder setInternalServerError(
          dalalstreet.socketapi.errors.Errors.InternalServerError.Builder builderForValue) {
        copyOnWrite();
        instance.setInternalServerError(builderForValue);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public Builder mergeInternalServerError(dalalstreet.socketapi.errors.Errors.InternalServerError value) {
        copyOnWrite();
        instance.mergeInternalServerError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public Builder clearInternalServerError() {
        copyOnWrite();
        instance.clearInternalServerError();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dalalstreet.socketapi.actions.LoginResponse)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new dalalstreet.socketapi.actions.Login.LoginResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          dalalstreet.socketapi.actions.Login.LoginResponse other = (dalalstreet.socketapi.actions.Login.LoginResponse) arg1;
          switch (other.getResponseCase()) {
            case RESULT: {
              response_ = visitor.visitOneofMessage(
                  responseCase_ == 1,
                  response_,
                  other.response_);
              break;
            }
            case INVALID_CREDENTIALS_ERROR: {
              response_ = visitor.visitOneofMessage(
                  responseCase_ == 2,
                  response_,
                  other.response_);
              break;
            }
            case BAD_REQUEST_ERROR: {
              response_ = visitor.visitOneofMessage(
                  responseCase_ == 3,
                  response_,
                  other.response_);
              break;
            }
            case INTERNAL_SERVER_ERROR: {
              response_ = visitor.visitOneofMessage(
                  responseCase_ == 4,
                  response_,
                  other.response_);
              break;
            }
            case RESPONSE_NOT_SET: {
              visitor.visitOneofNotSet(responseCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.responseCase_ != 0) {
              responseCase_ = other.responseCase_;
            }
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse.Builder subBuilder = null;
                  if (responseCase_ == 1) {
                    subBuilder = ((dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse) response_).toBuilder();
                  }
                  response_ =
                       input.readMessage(dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((dalalstreet.socketapi.actions.Login.LoginResponse.LoginSuccessResponse) response_);
                    response_ = subBuilder.buildPartial();
                  }
                  responseCase_ = 1;
                  break;
                }
                case 18: {
                  dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError.Builder subBuilder = null;
                  if (responseCase_ == 2) {
                    subBuilder = ((dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError) response_).toBuilder();
                  }
                  response_ =
                       input.readMessage(dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((dalalstreet.socketapi.actions.Login.LoginResponse.InvalidCredentialsError) response_);
                    response_ = subBuilder.buildPartial();
                  }
                  responseCase_ = 2;
                  break;
                }
                case 26: {
                  dalalstreet.socketapi.errors.Errors.BadRequestError.Builder subBuilder = null;
                  if (responseCase_ == 3) {
                    subBuilder = ((dalalstreet.socketapi.errors.Errors.BadRequestError) response_).toBuilder();
                  }
                  response_ =
                       input.readMessage(dalalstreet.socketapi.errors.Errors.BadRequestError.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((dalalstreet.socketapi.errors.Errors.BadRequestError) response_);
                    response_ = subBuilder.buildPartial();
                  }
                  responseCase_ = 3;
                  break;
                }
                case 34: {
                  dalalstreet.socketapi.errors.Errors.InternalServerError.Builder subBuilder = null;
                  if (responseCase_ == 4) {
                    subBuilder = ((dalalstreet.socketapi.errors.Errors.InternalServerError) response_).toBuilder();
                  }
                  response_ =
                       input.readMessage(dalalstreet.socketapi.errors.Errors.InternalServerError.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((dalalstreet.socketapi.errors.Errors.InternalServerError) response_);
                    response_ = subBuilder.buildPartial();
                  }
                  responseCase_ = 4;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (dalalstreet.socketapi.actions.Login.LoginResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:dalalstreet.socketapi.actions.LoginResponse)
    private static final dalalstreet.socketapi.actions.Login.LoginResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LoginResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static dalalstreet.socketapi.actions.Login.LoginResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LoginResponse> PARSER;

    public static com.google.protobuf.Parser<LoginResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
