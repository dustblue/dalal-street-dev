// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: actions/MortgageStocks.proto

package dalalstreet.socketapi.actions;

public final class MortgageStocks {
  private MortgageStocks() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MortgageStocksRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dalalstreet.socketapi.actions.MortgageStocksRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint32 stock_id = 1;</code>
     */
    int getStockId();

    /**
     * <code>optional uint32 stock_quantity = 2;</code>
     */
    int getStockQuantity();
  }
  /**
   * Protobuf type {@code dalalstreet.socketapi.actions.MortgageStocksRequest}
   */
  public  static final class MortgageStocksRequest extends
      com.google.protobuf.GeneratedMessageLite<
          MortgageStocksRequest, MortgageStocksRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:dalalstreet.socketapi.actions.MortgageStocksRequest)
      MortgageStocksRequestOrBuilder {
    private MortgageStocksRequest() {
    }
    public static final int STOCK_ID_FIELD_NUMBER = 1;
    private int stockId_;
    /**
     * <code>optional uint32 stock_id = 1;</code>
     */
    public int getStockId() {
      return stockId_;
    }
    /**
     * <code>optional uint32 stock_id = 1;</code>
     */
    private void setStockId(int value) {
      
      stockId_ = value;
    }
    /**
     * <code>optional uint32 stock_id = 1;</code>
     */
    private void clearStockId() {
      
      stockId_ = 0;
    }

    public static final int STOCK_QUANTITY_FIELD_NUMBER = 2;
    private int stockQuantity_;
    /**
     * <code>optional uint32 stock_quantity = 2;</code>
     */
    public int getStockQuantity() {
      return stockQuantity_;
    }
    /**
     * <code>optional uint32 stock_quantity = 2;</code>
     */
    private void setStockQuantity(int value) {
      
      stockQuantity_ = value;
    }
    /**
     * <code>optional uint32 stock_quantity = 2;</code>
     */
    private void clearStockQuantity() {
      
      stockQuantity_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (stockId_ != 0) {
        output.writeUInt32(1, stockId_);
      }
      if (stockQuantity_ != 0) {
        output.writeUInt32(2, stockQuantity_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (stockId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, stockId_);
      }
      if (stockQuantity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, stockQuantity_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code dalalstreet.socketapi.actions.MortgageStocksRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:dalalstreet.socketapi.actions.MortgageStocksRequest)
        dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequestOrBuilder {
      // Construct using dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional uint32 stock_id = 1;</code>
       */
      public int getStockId() {
        return instance.getStockId();
      }
      /**
       * <code>optional uint32 stock_id = 1;</code>
       */
      public Builder setStockId(int value) {
        copyOnWrite();
        instance.setStockId(value);
        return this;
      }
      /**
       * <code>optional uint32 stock_id = 1;</code>
       */
      public Builder clearStockId() {
        copyOnWrite();
        instance.clearStockId();
        return this;
      }

      /**
       * <code>optional uint32 stock_quantity = 2;</code>
       */
      public int getStockQuantity() {
        return instance.getStockQuantity();
      }
      /**
       * <code>optional uint32 stock_quantity = 2;</code>
       */
      public Builder setStockQuantity(int value) {
        copyOnWrite();
        instance.setStockQuantity(value);
        return this;
      }
      /**
       * <code>optional uint32 stock_quantity = 2;</code>
       */
      public Builder clearStockQuantity() {
        copyOnWrite();
        instance.clearStockQuantity();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dalalstreet.socketapi.actions.MortgageStocksRequest)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest other = (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest) arg1;
          stockId_ = visitor.visitInt(stockId_ != 0, stockId_,
              other.stockId_ != 0, other.stockId_);
          stockQuantity_ = visitor.visitInt(stockQuantity_ != 0, stockQuantity_,
              other.stockQuantity_ != 0, other.stockQuantity_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  stockId_ = input.readUInt32();
                  break;
                }
                case 16: {

                  stockQuantity_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:dalalstreet.socketapi.actions.MortgageStocksRequest)
    private static final dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MortgageStocksRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MortgageStocksRequest> PARSER;

    public static com.google.protobuf.Parser<MortgageStocksRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MortgageStocksResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dalalstreet.socketapi.actions.MortgageStocksResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
     */
    dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse getResult();

    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
     */
    dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError getNotEnoughStocksError();

    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    dalalstreet.socketapi.errors.Errors.BadRequestError getBadRequestError();

    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    dalalstreet.socketapi.errors.Errors.InternalServerError getInternalServerError();

    public dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.ResponseCase getResponseCase();
  }
  /**
   * Protobuf type {@code dalalstreet.socketapi.actions.MortgageStocksResponse}
   */
  public  static final class MortgageStocksResponse extends
      com.google.protobuf.GeneratedMessageLite<
          MortgageStocksResponse, MortgageStocksResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:dalalstreet.socketapi.actions.MortgageStocksResponse)
      MortgageStocksResponseOrBuilder {
    private MortgageStocksResponse() {
    }
    public interface MortgageStocksSuccessResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       *bool success = 1;
       *uint32 trading_price = 2;   //price of stocks that the bank paid the user
       * </pre>
       *
       * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
       */
      boolean hasTransaction();
      /**
       * <pre>
       *bool success = 1;
       *uint32 trading_price = 2;   //price of stocks that the bank paid the user
       * </pre>
       *
       * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
       */
      dalalstreet.socketapi.models.TransactionOuterClass.Transaction getTransaction();
    }
    /**
     * Protobuf type {@code dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse}
     */
    public  static final class MortgageStocksSuccessResponse extends
        com.google.protobuf.GeneratedMessageLite<
            MortgageStocksSuccessResponse, MortgageStocksSuccessResponse.Builder> implements
        // @@protoc_insertion_point(message_implements:dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse)
        MortgageStocksSuccessResponseOrBuilder {
      private MortgageStocksSuccessResponse() {
      }
      public static final int TRANSACTION_FIELD_NUMBER = 3;
      private dalalstreet.socketapi.models.TransactionOuterClass.Transaction transaction_;
      /**
       * <pre>
       *bool success = 1;
       *uint32 trading_price = 2;   //price of stocks that the bank paid the user
       * </pre>
       *
       * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
       */
      public boolean hasTransaction() {
        return transaction_ != null;
      }
      /**
       * <pre>
       *bool success = 1;
       *uint32 trading_price = 2;   //price of stocks that the bank paid the user
       * </pre>
       *
       * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
       */
      public dalalstreet.socketapi.models.TransactionOuterClass.Transaction getTransaction() {
        return transaction_ == null ? dalalstreet.socketapi.models.TransactionOuterClass.Transaction.getDefaultInstance() : transaction_;
      }
      /**
       * <pre>
       *bool success = 1;
       *uint32 trading_price = 2;   //price of stocks that the bank paid the user
       * </pre>
       *
       * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
       */
      private void setTransaction(dalalstreet.socketapi.models.TransactionOuterClass.Transaction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        transaction_ = value;
        
        }
      /**
       * <pre>
       *bool success = 1;
       *uint32 trading_price = 2;   //price of stocks that the bank paid the user
       * </pre>
       *
       * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
       */
      private void setTransaction(
          dalalstreet.socketapi.models.TransactionOuterClass.Transaction.Builder builderForValue) {
        transaction_ = builderForValue.build();
        
      }
      /**
       * <pre>
       *bool success = 1;
       *uint32 trading_price = 2;   //price of stocks that the bank paid the user
       * </pre>
       *
       * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
       */
      private void mergeTransaction(dalalstreet.socketapi.models.TransactionOuterClass.Transaction value) {
        if (transaction_ != null &&
            transaction_ != dalalstreet.socketapi.models.TransactionOuterClass.Transaction.getDefaultInstance()) {
          transaction_ =
            dalalstreet.socketapi.models.TransactionOuterClass.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
        } else {
          transaction_ = value;
        }
        
      }
      /**
       * <pre>
       *bool success = 1;
       *uint32 trading_price = 2;   //price of stocks that the bank paid the user
       * </pre>
       *
       * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
       */
      private void clearTransaction() {  transaction_ = null;
        
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (transaction_ != null) {
          output.writeMessage(3, getTransaction());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (transaction_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getTransaction());
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse, Builder> implements
          // @@protoc_insertion_point(builder_implements:dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse)
          dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponseOrBuilder {
        // Construct using dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         *bool success = 1;
         *uint32 trading_price = 2;   //price of stocks that the bank paid the user
         * </pre>
         *
         * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
         */
        public boolean hasTransaction() {
          return instance.hasTransaction();
        }
        /**
         * <pre>
         *bool success = 1;
         *uint32 trading_price = 2;   //price of stocks that the bank paid the user
         * </pre>
         *
         * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
         */
        public dalalstreet.socketapi.models.TransactionOuterClass.Transaction getTransaction() {
          return instance.getTransaction();
        }
        /**
         * <pre>
         *bool success = 1;
         *uint32 trading_price = 2;   //price of stocks that the bank paid the user
         * </pre>
         *
         * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
         */
        public Builder setTransaction(dalalstreet.socketapi.models.TransactionOuterClass.Transaction value) {
          copyOnWrite();
          instance.setTransaction(value);
          return this;
          }
        /**
         * <pre>
         *bool success = 1;
         *uint32 trading_price = 2;   //price of stocks that the bank paid the user
         * </pre>
         *
         * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
         */
        public Builder setTransaction(
            dalalstreet.socketapi.models.TransactionOuterClass.Transaction.Builder builderForValue) {
          copyOnWrite();
          instance.setTransaction(builderForValue);
          return this;
        }
        /**
         * <pre>
         *bool success = 1;
         *uint32 trading_price = 2;   //price of stocks that the bank paid the user
         * </pre>
         *
         * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
         */
        public Builder mergeTransaction(dalalstreet.socketapi.models.TransactionOuterClass.Transaction value) {
          copyOnWrite();
          instance.mergeTransaction(value);
          return this;
        }
        /**
         * <pre>
         *bool success = 1;
         *uint32 trading_price = 2;   //price of stocks that the bank paid the user
         * </pre>
         *
         * <code>optional .dalalstreet.socketapi.models.Transaction transaction = 3;</code>
         */
        public Builder clearTransaction() {  copyOnWrite();
          instance.clearTransaction();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse other = (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse) arg1;
            transaction_ = visitor.visitMessage(transaction_, other.transaction_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 26: {
                    dalalstreet.socketapi.models.TransactionOuterClass.Transaction.Builder subBuilder = null;
                    if (transaction_ != null) {
                      subBuilder = transaction_.toBuilder();
                    }
                    transaction_ = input.readMessage(dalalstreet.socketapi.models.TransactionOuterClass.Transaction.parser(), extensionRegistry);
                    if (subBuilder != null) {
                      subBuilder.mergeFrom(transaction_);
                      transaction_ = subBuilder.buildPartial();
                    }

                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse)
      private static final dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MortgageStocksSuccessResponse();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<MortgageStocksSuccessResponse> PARSER;

      public static com.google.protobuf.Parser<MortgageStocksSuccessResponse> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface NotEnoughStocksErrorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional string reason = 1;</code>
       */
      java.lang.String getReason();
      /**
       * <code>optional string reason = 1;</code>
       */
      com.google.protobuf.ByteString
          getReasonBytes();
    }
    /**
     * Protobuf type {@code dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError}
     */
    public  static final class NotEnoughStocksError extends
        com.google.protobuf.GeneratedMessageLite<
            NotEnoughStocksError, NotEnoughStocksError.Builder> implements
        // @@protoc_insertion_point(message_implements:dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError)
        NotEnoughStocksErrorOrBuilder {
      private NotEnoughStocksError() {
        reason_ = "";
      }
      public static final int REASON_FIELD_NUMBER = 1;
      private java.lang.String reason_;
      /**
       * <code>optional string reason = 1;</code>
       */
      public java.lang.String getReason() {
        return reason_;
      }
      /**
       * <code>optional string reason = 1;</code>
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(reason_);
      }
      /**
       * <code>optional string reason = 1;</code>
       */
      private void setReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reason_ = value;
      }
      /**
       * <code>optional string reason = 1;</code>
       */
      private void clearReason() {
        
        reason_ = getDefaultInstance().getReason();
      }
      /**
       * <code>optional string reason = 1;</code>
       */
      private void setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reason_ = value.toStringUtf8();
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!reason_.isEmpty()) {
          output.writeString(1, getReason());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (!reason_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getReason());
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError, Builder> implements
          // @@protoc_insertion_point(builder_implements:dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError)
          dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksErrorOrBuilder {
        // Construct using dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional string reason = 1;</code>
         */
        public java.lang.String getReason() {
          return instance.getReason();
        }
        /**
         * <code>optional string reason = 1;</code>
         */
        public com.google.protobuf.ByteString
            getReasonBytes() {
          return instance.getReasonBytes();
        }
        /**
         * <code>optional string reason = 1;</code>
         */
        public Builder setReason(
            java.lang.String value) {
          copyOnWrite();
          instance.setReason(value);
          return this;
        }
        /**
         * <code>optional string reason = 1;</code>
         */
        public Builder clearReason() {
          copyOnWrite();
          instance.clearReason();
          return this;
        }
        /**
         * <code>optional string reason = 1;</code>
         */
        public Builder setReasonBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setReasonBytes(value);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError other = (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError) arg1;
            reason_ = visitor.visitString(!reason_.isEmpty(), reason_,
                !other.reason_.isEmpty(), other.reason_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readStringRequireUtf8();

                    reason_ = s;
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError)
      private static final dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new NotEnoughStocksError();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<NotEnoughStocksError> PARSER;

      public static com.google.protobuf.Parser<NotEnoughStocksError> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int responseCase_ = 0;
    private java.lang.Object response_;
    public enum ResponseCase
        implements com.google.protobuf.Internal.EnumLite {
      RESULT(1),
      NOT_ENOUGH_STOCKS_ERROR(2),
      BAD_REQUEST_ERROR(3),
      INTERNAL_SERVER_ERROR(4),
      RESPONSE_NOT_SET(0);
      private final int value;
      private ResponseCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResponseCase valueOf(int value) {
        return forNumber(value);
      }

      public static ResponseCase forNumber(int value) {
        switch (value) {
          case 1: return RESULT;
          case 2: return NOT_ENOUGH_STOCKS_ERROR;
          case 3: return BAD_REQUEST_ERROR;
          case 4: return INTERNAL_SERVER_ERROR;
          case 0: return RESPONSE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ResponseCase
    getResponseCase() {
      return ResponseCase.forNumber(
          responseCase_);
    }

    private void clearResponse() {
      responseCase_ = 0;
      response_ = null;
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
     */
    public dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse getResult() {
      if (responseCase_ == 1) {
         return (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse) response_;
      }
      return dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse.getDefaultInstance();
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
     */
    private void setResult(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      responseCase_ = 1;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
     */
    private void setResult(
        dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse.Builder builderForValue) {
      response_ = builderForValue.build();
      responseCase_ = 1;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
     */
    private void mergeResult(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse value) {
      if (responseCase_ == 1 &&
          response_ != dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse.getDefaultInstance()) {
        response_ = dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse.newBuilder((dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse) response_)
            .mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      responseCase_ = 1;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
     */
    private void clearResult() {
      if (responseCase_ == 1) {
        responseCase_ = 0;
        response_ = null;
      }
    }

    public static final int NOT_ENOUGH_STOCKS_ERROR_FIELD_NUMBER = 2;
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
     */
    public dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError getNotEnoughStocksError() {
      if (responseCase_ == 2) {
         return (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError) response_;
      }
      return dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError.getDefaultInstance();
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
     */
    private void setNotEnoughStocksError(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      responseCase_ = 2;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
     */
    private void setNotEnoughStocksError(
        dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError.Builder builderForValue) {
      response_ = builderForValue.build();
      responseCase_ = 2;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
     */
    private void mergeNotEnoughStocksError(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError value) {
      if (responseCase_ == 2 &&
          response_ != dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError.getDefaultInstance()) {
        response_ = dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError.newBuilder((dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError) response_)
            .mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      responseCase_ = 2;
    }
    /**
     * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
     */
    private void clearNotEnoughStocksError() {
      if (responseCase_ == 2) {
        responseCase_ = 0;
        response_ = null;
      }
    }

    public static final int BAD_REQUEST_ERROR_FIELD_NUMBER = 3;
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    public dalalstreet.socketapi.errors.Errors.BadRequestError getBadRequestError() {
      if (responseCase_ == 3) {
         return (dalalstreet.socketapi.errors.Errors.BadRequestError) response_;
      }
      return dalalstreet.socketapi.errors.Errors.BadRequestError.getDefaultInstance();
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    private void setBadRequestError(dalalstreet.socketapi.errors.Errors.BadRequestError value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      responseCase_ = 3;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    private void setBadRequestError(
        dalalstreet.socketapi.errors.Errors.BadRequestError.Builder builderForValue) {
      response_ = builderForValue.build();
      responseCase_ = 3;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    private void mergeBadRequestError(dalalstreet.socketapi.errors.Errors.BadRequestError value) {
      if (responseCase_ == 3 &&
          response_ != dalalstreet.socketapi.errors.Errors.BadRequestError.getDefaultInstance()) {
        response_ = dalalstreet.socketapi.errors.Errors.BadRequestError.newBuilder((dalalstreet.socketapi.errors.Errors.BadRequestError) response_)
            .mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      responseCase_ = 3;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
     */
    private void clearBadRequestError() {
      if (responseCase_ == 3) {
        responseCase_ = 0;
        response_ = null;
      }
    }

    public static final int INTERNAL_SERVER_ERROR_FIELD_NUMBER = 4;
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    public dalalstreet.socketapi.errors.Errors.InternalServerError getInternalServerError() {
      if (responseCase_ == 4) {
         return (dalalstreet.socketapi.errors.Errors.InternalServerError) response_;
      }
      return dalalstreet.socketapi.errors.Errors.InternalServerError.getDefaultInstance();
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    private void setInternalServerError(dalalstreet.socketapi.errors.Errors.InternalServerError value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      responseCase_ = 4;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    private void setInternalServerError(
        dalalstreet.socketapi.errors.Errors.InternalServerError.Builder builderForValue) {
      response_ = builderForValue.build();
      responseCase_ = 4;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    private void mergeInternalServerError(dalalstreet.socketapi.errors.Errors.InternalServerError value) {
      if (responseCase_ == 4 &&
          response_ != dalalstreet.socketapi.errors.Errors.InternalServerError.getDefaultInstance()) {
        response_ = dalalstreet.socketapi.errors.Errors.InternalServerError.newBuilder((dalalstreet.socketapi.errors.Errors.InternalServerError) response_)
            .mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      responseCase_ = 4;
    }
    /**
     * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
     */
    private void clearInternalServerError() {
      if (responseCase_ == 4) {
        responseCase_ = 0;
        response_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responseCase_ == 1) {
        output.writeMessage(1, (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse) response_);
      }
      if (responseCase_ == 2) {
        output.writeMessage(2, (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError) response_);
      }
      if (responseCase_ == 3) {
        output.writeMessage(3, (dalalstreet.socketapi.errors.Errors.BadRequestError) response_);
      }
      if (responseCase_ == 4) {
        output.writeMessage(4, (dalalstreet.socketapi.errors.Errors.InternalServerError) response_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (responseCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse) response_);
      }
      if (responseCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError) response_);
      }
      if (responseCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (dalalstreet.socketapi.errors.Errors.BadRequestError) response_);
      }
      if (responseCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (dalalstreet.socketapi.errors.Errors.InternalServerError) response_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code dalalstreet.socketapi.actions.MortgageStocksResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:dalalstreet.socketapi.actions.MortgageStocksResponse)
        dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponseOrBuilder {
      // Construct using dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public ResponseCase
          getResponseCase() {
        return instance.getResponseCase();
      }

      public Builder clearResponse() {
        copyOnWrite();
        instance.clearResponse();
        return this;
      }


      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
       */
      public dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse getResult() {
        return instance.getResult();
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
       */
      public Builder setResult(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse value) {
        copyOnWrite();
        instance.setResult(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
       */
      public Builder setResult(
          dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setResult(builderForValue);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
       */
      public Builder mergeResult(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse value) {
        copyOnWrite();
        instance.mergeResult(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.MortgageStocksSuccessResponse result = 1;</code>
       */
      public Builder clearResult() {
        copyOnWrite();
        instance.clearResult();
        return this;
      }

      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
       */
      public dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError getNotEnoughStocksError() {
        return instance.getNotEnoughStocksError();
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
       */
      public Builder setNotEnoughStocksError(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError value) {
        copyOnWrite();
        instance.setNotEnoughStocksError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
       */
      public Builder setNotEnoughStocksError(
          dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError.Builder builderForValue) {
        copyOnWrite();
        instance.setNotEnoughStocksError(builderForValue);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
       */
      public Builder mergeNotEnoughStocksError(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError value) {
        copyOnWrite();
        instance.mergeNotEnoughStocksError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.actions.MortgageStocksResponse.NotEnoughStocksError not_enough_stocks_error = 2;</code>
       */
      public Builder clearNotEnoughStocksError() {
        copyOnWrite();
        instance.clearNotEnoughStocksError();
        return this;
      }

      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public dalalstreet.socketapi.errors.Errors.BadRequestError getBadRequestError() {
        return instance.getBadRequestError();
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public Builder setBadRequestError(dalalstreet.socketapi.errors.Errors.BadRequestError value) {
        copyOnWrite();
        instance.setBadRequestError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public Builder setBadRequestError(
          dalalstreet.socketapi.errors.Errors.BadRequestError.Builder builderForValue) {
        copyOnWrite();
        instance.setBadRequestError(builderForValue);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public Builder mergeBadRequestError(dalalstreet.socketapi.errors.Errors.BadRequestError value) {
        copyOnWrite();
        instance.mergeBadRequestError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.BadRequestError bad_request_error = 3;</code>
       */
      public Builder clearBadRequestError() {
        copyOnWrite();
        instance.clearBadRequestError();
        return this;
      }

      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public dalalstreet.socketapi.errors.Errors.InternalServerError getInternalServerError() {
        return instance.getInternalServerError();
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public Builder setInternalServerError(dalalstreet.socketapi.errors.Errors.InternalServerError value) {
        copyOnWrite();
        instance.setInternalServerError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public Builder setInternalServerError(
          dalalstreet.socketapi.errors.Errors.InternalServerError.Builder builderForValue) {
        copyOnWrite();
        instance.setInternalServerError(builderForValue);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public Builder mergeInternalServerError(dalalstreet.socketapi.errors.Errors.InternalServerError value) {
        copyOnWrite();
        instance.mergeInternalServerError(value);
        return this;
      }
      /**
       * <code>optional .dalalstreet.socketapi.errors.InternalServerError internal_server_error = 4;</code>
       */
      public Builder clearInternalServerError() {
        copyOnWrite();
        instance.clearInternalServerError();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dalalstreet.socketapi.actions.MortgageStocksResponse)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse other = (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse) arg1;
          switch (other.getResponseCase()) {
            case RESULT: {
              response_ = visitor.visitOneofMessage(
                  responseCase_ == 1,
                  response_,
                  other.response_);
              break;
            }
            case NOT_ENOUGH_STOCKS_ERROR: {
              response_ = visitor.visitOneofMessage(
                  responseCase_ == 2,
                  response_,
                  other.response_);
              break;
            }
            case BAD_REQUEST_ERROR: {
              response_ = visitor.visitOneofMessage(
                  responseCase_ == 3,
                  response_,
                  other.response_);
              break;
            }
            case INTERNAL_SERVER_ERROR: {
              response_ = visitor.visitOneofMessage(
                  responseCase_ == 4,
                  response_,
                  other.response_);
              break;
            }
            case RESPONSE_NOT_SET: {
              visitor.visitOneofNotSet(responseCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.responseCase_ != 0) {
              responseCase_ = other.responseCase_;
            }
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse.Builder subBuilder = null;
                  if (responseCase_ == 1) {
                    subBuilder = ((dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse) response_).toBuilder();
                  }
                  response_ =
                       input.readMessage(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.MortgageStocksSuccessResponse) response_);
                    response_ = subBuilder.buildPartial();
                  }
                  responseCase_ = 1;
                  break;
                }
                case 18: {
                  dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError.Builder subBuilder = null;
                  if (responseCase_ == 2) {
                    subBuilder = ((dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError) response_).toBuilder();
                  }
                  response_ =
                       input.readMessage(dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.NotEnoughStocksError) response_);
                    response_ = subBuilder.buildPartial();
                  }
                  responseCase_ = 2;
                  break;
                }
                case 26: {
                  dalalstreet.socketapi.errors.Errors.BadRequestError.Builder subBuilder = null;
                  if (responseCase_ == 3) {
                    subBuilder = ((dalalstreet.socketapi.errors.Errors.BadRequestError) response_).toBuilder();
                  }
                  response_ =
                       input.readMessage(dalalstreet.socketapi.errors.Errors.BadRequestError.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((dalalstreet.socketapi.errors.Errors.BadRequestError) response_);
                    response_ = subBuilder.buildPartial();
                  }
                  responseCase_ = 3;
                  break;
                }
                case 34: {
                  dalalstreet.socketapi.errors.Errors.InternalServerError.Builder subBuilder = null;
                  if (responseCase_ == 4) {
                    subBuilder = ((dalalstreet.socketapi.errors.Errors.InternalServerError) response_).toBuilder();
                  }
                  response_ =
                       input.readMessage(dalalstreet.socketapi.errors.Errors.InternalServerError.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((dalalstreet.socketapi.errors.Errors.InternalServerError) response_);
                    response_ = subBuilder.buildPartial();
                  }
                  responseCase_ = 4;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:dalalstreet.socketapi.actions.MortgageStocksResponse)
    private static final dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MortgageStocksResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static dalalstreet.socketapi.actions.MortgageStocks.MortgageStocksResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MortgageStocksResponse> PARSER;

    public static com.google.protobuf.Parser<MortgageStocksResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
